[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pinn-turbulent-channel-flow"
version = "1.0.0"
description = "Physics-Informed Neural Networks for RANS Channel Flow with k-epsilon turbulence modeling"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "PINN Research Team", email = "contact@example.com"}
]
maintainers = [
    {name = "PINN Research Team", email = "contact@example.com"}
]
keywords = ["PINN", "CFD", "turbulence", "deep learning", "neural networks"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.7"
dependencies = [
    "numpy>=1.21.0",
    "torch>=1.12.0",
    "deepxde>=1.9.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "pandas>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "scikit-learn>=1.0.0",
    "seaborn>=0.11.0",
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "jupyterlab>=3.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/example/pinn-turbulent-channel-flow"
Documentation = "https://pinn-turbulent-channel-flow.readthedocs.io/"
Repository = "https://github.com/example/pinn-turbulent-channel-flow.git"
"Bug Tracker" = "https://github.com/example/pinn-turbulent-channel-flow/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
